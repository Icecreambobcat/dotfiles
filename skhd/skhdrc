# change window focus within space
alt - h : yabai -m window --focus west  || yabai -m display --focus west
alt - j : yabai -m window --focus south || yabai -m display --focus south
alt - k : yabai -m window --focus north || yabai -m display --focus north
alt - l : yabai -m window --focus east  || yabai -m display --focus east

# Cycle all windows on space backwards by coordinate (excluding windows where "scratchpad" is a non-empty string)
alt - m : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "del(.[] | select(.scratchpad | type == \"string\" and length > 0)) | [sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"

# Cycle all windows on space forwards by coordinate (excluding windows where "scratchpad" is a non-empty string)
alt - n : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "del(.[] | select(.scratchpad | type == \"string\" and length > 0)) | [sort_by(.id, .frame) | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"


# Move to the next space if the last space is not focused
alt - 0x29 : info=$(yabai -m query --spaces --display) && \
          last=$(echo $info | jq '.[-1]."has-focus"') && \
          if [[ $last == "false" ]]; then \
              yabai -m space --focus next; \
          else \
              yabai -m space --focus $(echo $info | jq '.[0].index'); \
          fi

# Move to the previous space if the first space is not focused
alt - g : info=$(yabai -m query --spaces --display) && \
          first=$(echo $info | jq '.[0]."has-focus"') && \
          if [[ $first == "false" ]]; then \
              yabai -m space --focus prev; \
          else \
              yabai -m space --focus $(echo $info | jq '.[-1].index'); \
          fi

# rotate layout clockwise
alt - r : yabai -m space --rotate 270
shift + alt - r : yabai -m space --rotate 90

# flip along y-axis
shift + alt - y : yabai -m space --mirror y-axis

# flip along x-axis
shift + alt - x : yabai -m space --mirror x-axis

# toggle window float
alt - space : yabai -m window --toggle float --grid 16:20:1:1:18:14

# maximize a window
shift + alt - m : yabai -m window --toggle zoom-fullscreen

# balance out tree of windows (resize to occupy same area)
shift + alt - e : yabai -m space --balance

# swap windows
shift + alt - h : yabai -m window --warp west || $(yabai -m window --display west && yabai -m display --focus west && yabai -m window --warp last) || yabai -m window --move rel:-10:0
shift + alt - j : yabai -m window --warp south || $(yabai -m window --display south && yabai -m display --focus south) || yabai -m window --move rel:0:10
shift + alt - k : yabai -m window --warp north || $(yabai -m window --display north && yabai -m display --focus north) || yabai -m window --move rel:0:-10
shift + alt - l : yabai -m window --warp east || $(yabai -m window --display east && yabai -m display --focus east && yabai -m window --warp first) || yabai -m window --move rel:10:0

#move window to prev and next space
shift + alt - p : yabai -m window --space prev && yabai -m space --focus prev
shift + alt - n : yabai -m window --space next && yabai -m space --focus next

# move window to space #
shift + alt - 1 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[1] ]] \
                  && yabai -m window --space $SPACES[1]

shift + alt - 2 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[2] ]] \
                  && yabai -m window --space $SPACES[2]

shift + alt - 3 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[3] ]] \
                  && yabai -m window --space $SPACES[3]

shift + alt - 4 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[4] ]] \
                  && yabai -m window --space $SPACES[4]

shift + alt - 5 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[5] ]] \
                  && yabai -m window --space $SPACES[5]

shift + alt - 6 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[6] ]] \
                  && yabai -m window --space $SPACES[6]

shift + alt - 7 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[7] ]] \
                  && yabai -m window --space $SPACES[7]

shift + alt - 8 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[8] ]] \
                  && yabai -m window --space $SPACES[8]

shift + alt - 9 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[9] ]] \
                  && yabai -m window --space $SPACES[9]

shift + alt - 0 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[10] ]] \
                  && yabai -m window --space $SPACES[10]

# stop/start/restart yabai
ctrl + alt - q : yabai --stop-service
ctrl + alt - s : yabai --start-service
ctrl + alt - r : yabai --restart-service
ctrl + alt - w : sketchybar --reload


# create/destroy space
ctrl + alt - c : yabai -m space --create
ctrl + alt - x : yabai -m space --destroy

# move spaces
alt - 1 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[1] ]] && yabai -m space --focus $SPACES[1]
alt - 2 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[2] ]] && yabai -m space --focus $SPACES[2]
alt - 3 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[3] ]] && yabai -m space --focus $SPACES[3]
alt - 4 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[4] ]] && yabai -m space --focus $SPACES[4]
alt - 5 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[5] ]] && yabai -m space --focus $SPACES[5]
alt - 6 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[6] ]] && yabai -m space --focus $SPACES[6]
alt - 7 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[7] ]] && yabai -m space --focus $SPACES[7]
alt - 8 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[8] ]] && yabai -m space --focus $SPACES[8]
alt - 9 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[9] ]] && yabai -m space --focus $SPACES[9]
alt - 0 : SPACES=($(yabai -m query --displays --display | jq '.spaces[]')) && [[ -n $SPACES[10] ]] && yabai -m space --focus $SPACES[10]

# mv floating window
ctrl + alt - h : yabai -m window --resize right:-100:0 || yabai -m window --resize left:-100:0
ctrl + alt - j : yabai -m window --resize bottom:0:100 || yabai -m window --resize top:0:100
ctrl + alt - k : yabai -m window --resize bottom:0:-100 || yabai -m window --resize top:0:-100
ctrl + alt - l : yabai -m window --resize right:100:0 || yabai -m window --resize left:100:0

# misc
## Stacks (shift + ctrl - ...)
# Add the active window to the window or stack to the {direction}: shift + ctrl - {j, k, l, รถ}
shift + ctrl - h    : yabai -m window  west --stack $(yabai -m query --windows --window | jq -r '.id')
shift + ctrl - j    : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id')
shift + ctrl - k    : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id')
shift + ctrl - l : yabai -m window  east --stack $(yabai -m query --windows --window | jq -r '.id')

shift + ctrl - n : yabai -m window --focus stack.next
shift + ctrl - p : yabai -m window --focus stack.prev

## Insertion (shift + ctrl + lalt - ...)
# Set insertion point for focused container: shift + ctrl + lalt - {j, k, l, รถ, s}
shift + ctrl + alt - h : yabai -m window --insert west
shift + ctrl + alt - j : yabai -m window --insert south
shift + ctrl + alt - k : yabai -m window --insert north
shift + ctrl + alt - l : yabai -m window --insert east
shift + ctrl + alt - s : yabai -m window --insert stack

# New window in hor./ vert. splits for all applications with yabai
alt - a : yabai -m window --insert east;  skhd -k "cmd - n"
alt - s : yabai -m window --insert south; skhd -k "cmd - n"

# Scratchpads
alt - q : yabai -m window --toggle Spotify || open -a Spotify
alt - w : yabai -m window --toggle Discord || open -a Discord
